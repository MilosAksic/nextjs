{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport reducer from \"./reducer\";\n\nvar useFormik = function useFormik(props) {\n  if (!props.onSubmit) {\n    throw new Error(\"You forgot to pass on submit to useFormik\");\n  }\n\n  var _React$useReducer = React.useReducer(reducer, {\n    values: props.initialValues,\n    errors: {},\n    touched: {},\n    isSubmitting: false\n  }),\n      _React$useReducer2 = _slicedToArray(_React$useReducer, 2),\n      state = _React$useReducer2[0],\n      dispatch = _React$useReducer2[1];\n\n  React.useEffect(function () {\n    if (props.validate) {\n      var errors = props.validate(state.values);\n      dispatch({\n        type: \"SET_ERRORS\",\n        payload: errors\n      });\n    }\n  }, [state.values]);\n\n  var handleChange = function handleChange(event) {\n    event.persist();\n    dispatch({\n      type: \"SET_FIELD_VALIUE\",\n      payload: _defineProperty({}, event.target.name, event.target.value)\n    });\n  };\n\n  var handleBlur = function handleBlur(event) {\n    event.persist();\n    dispatch({\n      type: \"SET_FIELD_TOUCHED\",\n      payload: _defineProperty({}, event.target.name, true)\n    });\n  };\n\n  var handleSubmit =\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(event) {\n      var errors;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault();\n              dispatch({\n                type: \"SUBMIT_ATTEMPT\"\n              }); //validate\n\n              errors = props.validate(state.values);\n\n              if (!_Object$keys(errors).length) {\n                try {\n                  props.onSubmit(state.values);\n                  dispatch({\n                    type: \"SUBMIT_SUCCES\"\n                  });\n                } catch (submitError) {\n                  dispatch({\n                    type: \"SUBMIT_FAILURE\"\n                  });\n                }\n              } else {\n                dispatch({\n                  type: \"SET_ERRORS\",\n                  payload: errors\n                });\n                dispatch({\n                  type: \"SUBMIT_FAILURE\"\n                });\n              } //mark each field as touched\n\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return _objectSpread({\n    handleChange: handleChange,\n    handleBlur: handleBlur,\n    handleSubmit: handleSubmit\n  }, state);\n};\n\nexport default useFormik;","map":{"version":3,"sources":["C:/Front end/Praksa/next-vezba/next-example/components/useFormik.js"],"names":["React","reducer","useFormik","props","onSubmit","Error","useReducer","values","initialValues","errors","touched","isSubmitting","state","dispatch","useEffect","validate","type","payload","handleChange","event","persist","target","name","value","handleBlur","handleSubmit","preventDefault","length","submitError"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport reducer from \"./reducer\";\r\n\r\nconst useFormik = props => {\r\n  if (!props.onSubmit) {\r\n    throw new Error(\"You forgot to pass on submit to useFormik\");\r\n  }\r\n  const [state, dispatch] = React.useReducer(reducer, {\r\n    values: props.initialValues,\r\n    errors: {},\r\n    touched: {},\r\n    isSubmitting: false\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    if (props.validate) {\r\n      const errors = props.validate(state.values);\r\n      dispatch({ type: \"SET_ERRORS\", payload: errors });\r\n    }\r\n  }, [state.values]);\r\n\r\n  const handleChange = event => {\r\n    event.persist();\r\n    dispatch({\r\n      type: \"SET_FIELD_VALIUE\",\r\n      payload: { [event.target.name]: event.target.value }\r\n    });\r\n  };\r\n\r\n  const handleBlur = event => {\r\n    event.persist();\r\n    dispatch({\r\n      type: \"SET_FIELD_TOUCHED\",\r\n      payload: { [event.target.name]: true }\r\n    });\r\n  };\r\n  const handleSubmit = async event => {\r\n    event.preventDefault();\r\n    dispatch({ type: \"SUBMIT_ATTEMPT\" });\r\n    //validate\r\n    const errors = props.validate(state.values);\r\n    if (!Object.keys(errors).length) {\r\n      try {\r\n        props.onSubmit(state.values);\r\n        dispatch({ type: \"SUBMIT_SUCCES\" });\r\n      } catch (submitError) {\r\n        dispatch({ type: \"SUBMIT_FAILURE\" });\r\n      }\r\n    } else {\r\n      dispatch({ type: \"SET_ERRORS\", payload: errors });\r\n      dispatch({ type: \"SUBMIT_FAILURE\" });\r\n    }\r\n    //mark each field as touched\r\n  };\r\n\r\n  return { handleChange, handleBlur, handleSubmit, ...state };\r\n};\r\n\r\nexport default useFormik;\r\n"]},"metadata":{},"sourceType":"module"}