{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"SET_FIELD_VALIUE\":\n      return _objectSpread({}, state, {\n        values: _objectSpread({}, state.values, {}, action.payload)\n      });\n\n    case \"SET_FIELD_TOUCHED\":\n      return _objectSpread({}, state, {\n        touched: _objectSpread({}, state.touched, {}, action.payload)\n      });\n\n    case \"SET_ERRORS\":\n      return _objectSpread({}, state, {\n        errors: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Front end/Praksa/next-vezba/next-example/components/reducer.js"],"names":["reducer","state","action","type","values","payload","touched","errors"],"mappings":";;;;;;;;;;;;AAAA,MAAMA,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,kBAAL;AACE,+BACKF,KADL;AAEEG,QAAAA,MAAM,oBACDH,KAAK,CAACG,MADL,MAEDF,MAAM,CAACG,OAFN;AAFR;;AAOF,SAAK,mBAAL;AACE,+BACKJ,KADL;AAEEK,QAAAA,OAAO,oBACFL,KAAK,CAACK,OADJ,MAEFJ,MAAM,CAACG,OAFL;AAFT;;AAOF,SAAK,YAAL;AACE,+BACKJ,KADL;AAEEM,QAAAA,MAAM,EAAEL,MAAM,CAACG;AAFjB;;AAKF;AACE,aAAOJ,KAAP;AAxBJ;AA0BD,CA3BD;;AA6BA,eAAeD,OAAf","sourcesContent":["const reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"SET_FIELD_VALIUE\":\r\n      return {\r\n        ...state,\r\n        values: {\r\n          ...state.values,\r\n          ...action.payload\r\n        }\r\n      };\r\n    case \"SET_FIELD_TOUCHED\":\r\n      return {\r\n        ...state,\r\n        touched: {\r\n          ...state.touched,\r\n          ...action.payload\r\n        }\r\n      };\r\n    case \"SET_ERRORS\":\r\n      return {\r\n        ...state,\r\n        errors: action.payload\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}