{"ast":null,"code":"import _Array$isArray from \"@babel/runtime-corejs2/core-js/array/is-array\";\nimport _Object$keys2 from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _WeakMap from \"@babel/runtime-corejs2/core-js/weak-map\";\nexport var isObject = function isObject(obj) {\n  if (obj !== null && typeof obj == \"object\") {\n    return true;\n  }\n\n  return false;\n};\nexport function setNestedObjectValues(object, value) {\n  var visited = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : new _WeakMap();\n  var response = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n  for (var _i = 0, _Object$keys = _Object$keys2(object); _i < _Object$keys.length; _i++) {\n    var k = _Object$keys[_i];\n    console.log(\"radi\", k);\n    var val = object[k];\n\n    if (isObject(val)) {\n      if (!visited.get(val)) {\n        visited.set(val, true);\n        response[k] = _Array$isArray(val) ? [] : {};\n        setNestedObjectValues(val, value, visited, response[k]);\n        console.log(\"radi if\");\n      } else {\n        response[k] = value;\n        console.log(\"radi else\");\n      }\n    }\n\n    console.log(\"response\", response);\n    return response;\n  }\n}","map":{"version":3,"sources":["C:/Front end/Praksa/next-vezba/next-example/components/utils.js"],"names":["isObject","obj","setNestedObjectValues","object","value","visited","response","k","console","log","val","get","set"],"mappings":";;;AAAA,OAAO,IAAMA,QAAQ,GAAG,SAAXA,QAAW,CAAAC,GAAG,EAAI;AAC7B,MAAIA,GAAG,KAAK,IAAR,IAAgB,OAAOA,GAAP,IAAc,QAAlC,EAA4C;AAC1C,WAAO,IAAP;AACD;;AACD,SAAO,KAAP;AACD,CALM;AAOP,OAAO,SAASC,qBAAT,CACLC,MADK,EAELC,KAFK,EAKL;AAAA,MAFAC,OAEA,uEAFU,cAEV;AAAA,MADAC,QACA,uEADW,EACX;;AACA,kCAAc,cAAYH,MAAZ,CAAd,kCAAmC;AAA9B,QAAII,CAAC,mBAAL;AACHC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBF,CAApB;AACA,QAAMG,GAAG,GAAGP,MAAM,CAACI,CAAD,CAAlB;;AACA,QAAIP,QAAQ,CAACU,GAAD,CAAZ,EAAmB;AACjB,UAAI,CAACL,OAAO,CAACM,GAAR,CAAYD,GAAZ,CAAL,EAAuB;AACrBL,QAAAA,OAAO,CAACO,GAAR,CAAYF,GAAZ,EAAiB,IAAjB;AACAJ,QAAAA,QAAQ,CAACC,CAAD,CAAR,GAAc,eAAcG,GAAd,IAAqB,EAArB,GAA0B,EAAxC;AACAR,QAAAA,qBAAqB,CAACQ,GAAD,EAAMN,KAAN,EAAaC,OAAb,EAAsBC,QAAQ,CAACC,CAAD,CAA9B,CAArB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD,OALD,MAKO;AACLH,QAAAA,QAAQ,CAACC,CAAD,CAAR,GAAcH,KAAd;AACAI,QAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACD;AACF;;AACDD,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBH,QAAxB;AACA,WAAOA,QAAP;AACD;AACF","sourcesContent":["export const isObject = obj => {\r\n  if (obj !== null && typeof obj == \"object\") {\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nexport function setNestedObjectValues(\r\n  object,\r\n  value,\r\n  visited = new WeakMap(),\r\n  response = {}\r\n) {\r\n  for (let k of Object.keys(object)) {\r\n    console.log(\"radi\", k);\r\n    const val = object[k];\r\n    if (isObject(val)) {\r\n      if (!visited.get(val)) {\r\n        visited.set(val, true);\r\n        response[k] = Array.isArray(val) ? [] : {};\r\n        setNestedObjectValues(val, value, visited, response[k]);\r\n        console.log(\"radi if\");\r\n      } else {\r\n        response[k] = value;\r\n        console.log(\"radi else\");\r\n      }\r\n    }\r\n    console.log(\"response\", response);\r\n    return response;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}