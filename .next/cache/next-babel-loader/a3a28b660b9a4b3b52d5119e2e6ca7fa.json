{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nvar _jsxFileName = \"C:\\\\Front end\\\\Praksa\\\\next-vezba\\\\next-example\\\\components\\\\NameForm.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { Button, Input, ErrorMsg } from \"./styledComponents\";\nimport useFormik from \"./useFormik\";\nimport { formValidation } from \"./validation\";\n\nconst NameForm = () => {\n  const formik = useFormik({\n    initialValues: {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      repeatedPassword: \"\"\n    },\n    onSubmit: values => {\n      alert(_JSON$stringify(values, null, 2));\n    },\n    validate: values => {\n      //   let errors = {};\n      //   if (values.name !== \"admin\") {\n      //     errors.name = \"You are not allowed\";\n      //   }\n      //   if (values.password !== values.repeatedPassword) {\n      //     errors.repeatedPassword = \"Password doesnt match\";\n      //   }\n      //   return errors;\n      let errors = {};\n      formValidation.validate(values, {\n        abortEarly: false\n      }).then(() => {}).catch(err => {\n        err.inner.map(item => {\n          errors[item.path] = item.errors[0];\n        });\n      });\n      return errors;\n    }\n  });\n  const {\n    handleSubmit,\n    getFieldProps,\n    touched,\n    errors,\n    submitError\n  } = formik;\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, submitError && __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \" \", submitError, \" \"), __jsx(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Name:\", __jsx(Input, _extends({\n    type: \"text\"\n  }, getFieldProps(\"name\"), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  })), errors.name && touched.name && __jsx(ErrorMsg, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \" \", errors.name)), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), __jsx(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Email:\", __jsx(Input, _extends({\n    type: \"email\"\n  }, getFieldProps(\"email\"), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  })), errors.email && touched.email && __jsx(ErrorMsg, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \" \", errors.email)), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), __jsx(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Password:\", __jsx(Input, _extends({\n    type: \"password\"\n  }, getFieldProps(\"password\"), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  })), errors.password && touched.password && __jsx(ErrorMsg, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \" \", errors.password)), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), __jsx(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Repeat Password:\", __jsx(Input, _extends({\n    type: \"password\"\n  }, getFieldProps(\"repeatedPassword\"), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  })), errors.repeatedPassword && touched.repeatedPassword && __jsx(ErrorMsg, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \" \", errors.repeatedPassword)), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }), __jsx(Button, {\n    type: \"submit\",\n    primary: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"Submit\")));\n};\n\nexport default NameForm;","map":{"version":3,"sources":["C:/Front end/Praksa/next-vezba/next-example/components/NameForm.js"],"names":["React","Button","Input","ErrorMsg","useFormik","formValidation","NameForm","formik","initialValues","name","email","password","repeatedPassword","onSubmit","values","alert","validate","errors","abortEarly","then","catch","err","inner","map","item","path","handleSubmit","getFieldProps","touched","submitError"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,QAAxB,QAAwC,oBAAxC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,cAAT,QAA+B,cAA/B;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACrB,QAAMC,MAAM,GAAGH,SAAS,CAAC;AACvBI,IAAAA,aAAa,EAAE;AACbC,MAAAA,IAAI,EAAE,EADO;AAEbC,MAAAA,KAAK,EAAE,EAFM;AAGbC,MAAAA,QAAQ,EAAE,EAHG;AAIbC,MAAAA,gBAAgB,EAAE;AAJL,KADQ;AAOvBC,IAAAA,QAAQ,EAAEC,MAAM,IAAI;AAClBC,MAAAA,KAAK,CAAC,gBAAeD,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAD,CAAL;AACD,KATsB;AAUvBE,IAAAA,QAAQ,EAAEF,MAAM,IAAI;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAIG,MAAM,GAAG,EAAb;AACAZ,MAAAA,cAAc,CACXW,QADH,CACYF,MADZ,EACoB;AAAEI,QAAAA,UAAU,EAAE;AAAd,OADpB,EAEGC,IAFH,CAEQ,MAAM,CAAE,CAFhB,EAGGC,KAHH,CAGSC,GAAG,IAAI;AACZA,QAAAA,GAAG,CAACC,KAAJ,CAAUC,GAAV,CAAcC,IAAI,IAAI;AACpBP,UAAAA,MAAM,CAACO,IAAI,CAACC,IAAN,CAAN,GAAoBD,IAAI,CAACP,MAAL,CAAY,CAAZ,CAApB;AACD,SAFD;AAGD,OAPH;AAQA,aAAOA,MAAP;AACD;AA7BsB,GAAD,CAAxB;AA+BA,QAAM;AAAES,IAAAA,YAAF;AAAgBC,IAAAA,aAAhB;AAA+BC,IAAAA,OAA/B;AAAwCX,IAAAA,MAAxC;AAAgDY,IAAAA;AAAhD,MAAgEtB,MAAtE;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,QAAQ,EAAEmB,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,WAAW,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAOA,WAAP,MADlB,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAEE,MAAC,KAAD;AAAO,IAAA,IAAI,EAAC;AAAZ,KAAuBF,aAAa,CAAC,MAAD,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFF,EAGGV,MAAM,CAACR,IAAP,IAAemB,OAAO,CAACnB,IAAvB,IAA+B,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAYQ,MAAM,CAACR,IAAnB,CAHlC,CAFF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAEE,MAAC,KAAD;AAAO,IAAA,IAAI,EAAC;AAAZ,KAAwBkB,aAAa,CAAC,OAAD,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFF,EAGGV,MAAM,CAACP,KAAP,IAAgBkB,OAAO,CAAClB,KAAxB,IACC,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAYO,MAAM,CAACP,KAAnB,CAJJ,CATF,EAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBF,EAiBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE,MAAC,KAAD;AAAO,IAAA,IAAI,EAAC;AAAZ,KAA2BiB,aAAa,CAAC,UAAD,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFF,EAGGV,MAAM,CAACN,QAAP,IAAmBiB,OAAO,CAACjB,QAA3B,IACC,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAYM,MAAM,CAACN,QAAnB,CAJJ,CAjBF,EAwBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxBF,EAyBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAEE,MAAC,KAAD;AAAO,IAAA,IAAI,EAAC;AAAZ,KAA2BgB,aAAa,CAAC,kBAAD,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFF,EAGGV,MAAM,CAACL,gBAAP,IAA2BgB,OAAO,CAAChB,gBAAnC,IACC,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAYK,MAAM,CAACL,gBAAnB,CAJJ,CAzBF,EAgCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhCF,EAkCE,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAlCF,CADF,CADF;AA0CD,CA3ED;;AA6EA,eAAeN,QAAf","sourcesContent":["import React from \"react\";\r\nimport { Button, Input, ErrorMsg } from \"./styledComponents\";\r\nimport useFormik from \"./useFormik\";\r\nimport { formValidation } from \"./validation\";\r\n\r\nconst NameForm = () => {\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      repeatedPassword: \"\"\r\n    },\r\n    onSubmit: values => {\r\n      alert(JSON.stringify(values, null, 2));\r\n    },\r\n    validate: values => {\r\n      //   let errors = {};\r\n      //   if (values.name !== \"admin\") {\r\n      //     errors.name = \"You are not allowed\";\r\n      //   }\r\n      //   if (values.password !== values.repeatedPassword) {\r\n      //     errors.repeatedPassword = \"Password doesnt match\";\r\n      //   }\r\n      //   return errors;\r\n      let errors = {};\r\n      formValidation\r\n        .validate(values, { abortEarly: false })\r\n        .then(() => {})\r\n        .catch(err => {\r\n          err.inner.map(item => {\r\n            errors[item.path] = item.errors[0];\r\n          });\r\n        });\r\n      return errors;\r\n    }\r\n  });\r\n  const { handleSubmit, getFieldProps, touched, errors, submitError } = formik;\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        {submitError && <div> {submitError} </div>}\r\n        <label>\r\n          Name:\r\n          <Input type=\"text\" {...getFieldProps(\"name\")}></Input>\r\n          {errors.name && touched.name && <ErrorMsg> {errors.name}</ErrorMsg>}\r\n        </label>\r\n        <br />\r\n\r\n        <label>\r\n          Email:\r\n          <Input type=\"email\" {...getFieldProps(\"email\")}></Input>\r\n          {errors.email && touched.email && (\r\n            <ErrorMsg> {errors.email}</ErrorMsg>\r\n          )}\r\n        </label>\r\n        <br />\r\n        <label>\r\n          Password:\r\n          <Input type=\"password\" {...getFieldProps(\"password\")}></Input>\r\n          {errors.password && touched.password && (\r\n            <ErrorMsg> {errors.password}</ErrorMsg>\r\n          )}\r\n        </label>\r\n        <br />\r\n        <label>\r\n          Repeat Password:\r\n          <Input type=\"password\" {...getFieldProps(\"repeatedPassword\")}></Input>\r\n          {errors.repeatedPassword && touched.repeatedPassword && (\r\n            <ErrorMsg> {errors.repeatedPassword}</ErrorMsg>\r\n          )}\r\n        </label>\r\n        <br />\r\n\r\n        <Button type=\"submit\" primary>\r\n          Submit\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NameForm;\r\n"]},"metadata":{},"sourceType":"module"}