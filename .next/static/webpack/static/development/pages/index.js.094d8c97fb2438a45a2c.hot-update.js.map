{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.094d8c97fb2438a45a2c.hot-update.js","sources":["webpack:///./components/reducer.js","webpack:///./components/useFormik.js"],"sourcesContent":["const reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"SET_FIELD_VALIUE\":\r\n      return {\r\n        ...state,\r\n        values: {\r\n          ...state.values,\r\n          ...action.payload\r\n        }\r\n      };\r\n    case \"SET_FIELD_TOUCHED\":\r\n      return {\r\n        ...state,\r\n        touched: {\r\n          ...state.touched,\r\n          ...action.payload\r\n        }\r\n      };\r\n    case \"SET_ERRORS\":\r\n      return {\r\n        ...state,\r\n        errors: action.payload\r\n      };\r\n    case \"SUBMIT_ATTEMPT\":\r\n      return {\r\n        ...state,\r\n        isSubmitting: true,\r\n        touched: setNestedObjectValues(state.values, true)\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import React from \"react\";\r\nimport reducer from \"./reducer\";\r\n\r\nconst useFormik = props => {\r\n  if (!props.onSubmit) {\r\n    throw new Error(\"You forgot to pass on submit to useFormik\");\r\n  }\r\n  const [state, dispatch] = React.useReducer(reducer, {\r\n    values: props.initialValues,\r\n    errors: {},\r\n    touched: {}\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    if (props.validate) {\r\n      const errors = props.validate(state.values);\r\n      dispatch({ type: \"SET_ERRORS\", payload: errors });\r\n    }\r\n  }, [state.values]);\r\n\r\n  const handleChange = event => {\r\n    event.persist();\r\n    dispatch({\r\n      type: \"SET_FIELD_VALIUE\",\r\n      payload: { [event.target.name]: event.target.value }\r\n    });\r\n  };\r\n\r\n  const handleBlur = event => {\r\n    event.persist();\r\n    dispatch({\r\n      type: \"SET_FIELD_TOUCHED\",\r\n      payload: { [event.target.name]: true }\r\n    });\r\n  };\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    dispatch({ type: \"SUBMIT_ATTEMPT\" });\r\n    //validate\r\n    //mark each field as touched\r\n    props.onSubmit(state.values);\r\n  };\r\n\r\n  return { handleChange, handleBlur, handleSubmit, ...state };\r\n};\r\n\r\nexport default useFormik;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AAFA;AACA;AAMA;AACA;AAEA;AAFA;AACA;AAMA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAEA;AACA;AAHA;AACA;AAKA;AACA;AA9BA;AAgCA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAKA;AACA;AACA;AAHA;AAJA;AAAA;AAAA;AACA;AASA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;;A","sourceRoot":""}